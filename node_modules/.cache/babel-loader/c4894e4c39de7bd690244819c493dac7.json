{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { protocolFetchSuccess, protocolFetchError, protocolFetchRequest } from './reducer';\nimport { toastNotify } from '../../utils';\nimport Service from '../../services';\nexport function* fetch() {\n  try {\n    const {\n      data\n    } = yield call(Service.fetchProtocol);\n    yield put(protocolFetchSuccess({\n      protocol: data\n    }));\n  } catch (error) {\n    toastNotify('Error en cliente.');\n    yield put(protocolFetchError({\n      error\n    }));\n  }\n}\nexport default function* protocolSaga() {\n  yield takeLatest(protocolFetchRequest, fetch);\n}","map":{"version":3,"sources":["/home/gonza/src/meraki-bo/src/store/protocol/saga.js"],"names":["call","put","takeLatest","protocolFetchSuccess","protocolFetchError","protocolFetchRequest","toastNotify","Service","fetch","data","fetchProtocol","protocol","error","protocolSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAmDC,oBAAnD,QAA+E,WAA/E;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,UAAUC,KAAV,GAAkB;AACvB,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACO,OAAO,CAACG,aAAT,CAA3B;AACA,UAAMT,GAAG,CAACE,oBAAoB,CAAC;AAAEQ,MAAAA,QAAQ,EAAEF;AAAZ,KAAD,CAArB,CAAT;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdN,IAAAA,WAAW,CAAC,mBAAD,CAAX;AACA,UAAML,GAAG,CAACG,kBAAkB,CAAC;AAAEQ,MAAAA;AAAF,KAAD,CAAnB,CAAT;AACD;AACF;AAED,eAAe,UAAUC,YAAV,GAAyB;AACtC,QAAMX,UAAU,CAACG,oBAAD,EAAuBG,KAAvB,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { protocolFetchSuccess, protocolFetchError, protocolFetchRequest } from './reducer';\nimport { toastNotify } from '../../utils';\nimport Service from '../../services';\n\nexport function* fetch() {\n  try {\n    const { data } = yield call(Service.fetchProtocol);\n    yield put(protocolFetchSuccess({ protocol: data }));\n  } catch (error) {\n    toastNotify('Error en cliente.');\n    yield put(protocolFetchError({ error }));\n  }\n}\n\nexport default function* protocolSaga() {\n  yield takeLatest(protocolFetchRequest, fetch);\n}\n"]},"metadata":{},"sourceType":"module"}