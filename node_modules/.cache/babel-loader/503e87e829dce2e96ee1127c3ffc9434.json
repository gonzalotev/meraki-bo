{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getStartStatus, getSuccessStatus, getErrorStatus } from '../helper/statusStateFactory';\nconst initialState = {\n  protocol: [],\n  status: getStartStatus()\n};\nexport const reducer = createSlice({\n  name: 'protocol',\n  initialState,\n  reducers: {\n    protocolFetchRequest: state => {\n      state.status = getStartStatus();\n    },\n    protocolFetchSuccess: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.status = getSuccessStatus();\n      state.protocol = payload.protocol;\n    },\n    protocolFetchError: (state, _ref2) => {\n      let {\n        error\n      } = _ref2;\n      state.status = getErrorStatus(error);\n    }\n  }\n});\nexport const {\n  protocolFetchRequest,\n  protocolFetchSuccess,\n  protocolFetchError\n} = reducer.actions;\nexport default reducer.reducer;","map":{"version":3,"sources":["/home/gonza/src/meraki-bo/src/store/protocol/reducer.js"],"names":["createSlice","getStartStatus","getSuccessStatus","getErrorStatus","initialState","protocol","status","reducer","name","reducers","protocolFetchRequest","state","protocolFetchSuccess","payload","protocolFetchError","error","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,cAA3C,QAAiE,8BAAjE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAEL,cAAc;AAFH,CAArB;AAKA,OAAO,MAAMM,OAAO,GAAGP,WAAW,CAAC;AACjCQ,EAAAA,IAAI,EAAE,UAD2B;AAEjCJ,EAAAA,YAFiC;AAGjCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,oBAAoB,EAAGC,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACL,MAAN,GAAeL,cAAc,EAA7B;AACD,KAHO;AAIRW,IAAAA,oBAAoB,EAAE,CAACD,KAAD,WAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC5CF,MAAAA,KAAK,CAACL,MAAN,GAAeJ,gBAAgB,EAA/B;AACAS,MAAAA,KAAK,CAACN,QAAN,GAAiBQ,OAAO,CAACR,QAAzB;AACD,KAPO;AAQRS,IAAAA,kBAAkB,EAAE,CAACH,KAAD,YAAsB;AAAA,UAAd;AAAEI,QAAAA;AAAF,OAAc;AACxCJ,MAAAA,KAAK,CAACL,MAAN,GAAeH,cAAc,CAACY,KAAD,CAA7B;AACD;AAVO;AAHuB,CAAD,CAA3B;AAiBP,OAAO,MAAM;AACXL,EAAAA,oBADW;AAEXE,EAAAA,oBAFW;AAGXE,EAAAA;AAHW,IAITP,OAAO,CAACS,OAJL;AAMP,eAAeT,OAAO,CAACA,OAAvB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getStartStatus, getSuccessStatus, getErrorStatus } from '../helper/statusStateFactory';\n\nconst initialState = {\n  protocol: [],\n  status: getStartStatus(),\n};\n\nexport const reducer = createSlice({\n  name: 'protocol',\n  initialState,\n  reducers: {\n    protocolFetchRequest: (state) => {\n      state.status = getStartStatus();\n    },\n    protocolFetchSuccess: (state, { payload }) => {\n      state.status = getSuccessStatus();\n      state.protocol = payload.protocol;\n    },\n    protocolFetchError: (state, { error }) => {\n      state.status = getErrorStatus(error);\n    },\n  },\n});\n\nexport const {\n  protocolFetchRequest,\n  protocolFetchSuccess,\n  protocolFetchError,\n} = reducer.actions;\n\nexport default reducer.reducer;\n"]},"metadata":{},"sourceType":"module"}