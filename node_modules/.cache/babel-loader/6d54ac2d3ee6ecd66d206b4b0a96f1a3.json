{"ast":null,"code":"var _jsxFileName = \"/home/gonza/src/meraki-bo/src/pages/protocol/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { protocolFetchRequest } from '../../store/protocol/reducer';\nimport { getProtocol, getStatusProtocol } from '../../store/protocol/selector';\nimport { Container, Title, Text, Content } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Protocol = () => {\n  _s();\n\n  const protocols = useSelector(getProtocol);\n  const status = useSelector(getStatusProtocol);\n  const dispatch = useDispatch();\n  console.log('isFetching', status === null || status === void 0 ? void 0 : status.isFetching, protocols);\n  useEffect(() => {\n    dispatch(protocolFetchRequest());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: protocols.map(protocol => /*#__PURE__*/_jsxDEV(Title, {\n      Key: protocol.SerialKey,\n      children: protocol.Nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Protocol, \"AE+IPEig9G8Twu7NZMkhT6I4XAQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Protocol;\nexport default Protocol;\n\nvar _c;\n\n$RefreshReg$(_c, \"Protocol\");","map":{"version":3,"sources":["/home/gonza/src/meraki-bo/src/pages/protocol/index.js"],"names":["useEffect","useDispatch","useSelector","protocolFetchRequest","getProtocol","getStatusProtocol","Container","Title","Text","Content","Protocol","protocols","status","dispatch","console","log","isFetching","map","protocol","SerialKey","Nombre"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,+BAA/C;AACA,SACEC,SADF,EACaC,KADb,EACoBC,IADpB,EAC0BC,OAD1B,QAEO,UAFP;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,SAAS,GAAGT,WAAW,CAACE,WAAD,CAA7B;AACA,QAAMQ,MAAM,GAAGV,WAAW,CAACG,iBAAD,CAA1B;AACA,QAAMQ,QAAQ,GAAGZ,WAAW,EAA5B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,MAA1B,aAA0BA,MAA1B,uBAA0BA,MAAM,CAAEI,UAAlC,EAA8CL,SAA9C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,cACGQ,SAAS,CAACM,GAAV,CAAeC,QAAD,iBACb,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,QAAQ,CAACC,SAArB;AAAA,gBAAiCD,QAAQ,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjBD;;GAAMV,Q;UACcR,W,EACHA,W,EACED,W;;;KAHbS,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { protocolFetchRequest } from '../../store/protocol/reducer';\nimport { getProtocol, getStatusProtocol } from '../../store/protocol/selector';\nimport {\n  Container, Title, Text, Content,\n} from './styled';\n\nconst Protocol = () => {\n  const protocols = useSelector(getProtocol);\n  const status = useSelector(getStatusProtocol);\n  const dispatch = useDispatch();\n  console.log('isFetching', status?.isFetching, protocols);\n\n  useEffect(() => {\n    dispatch(protocolFetchRequest());\n  }, []);\n\n  return (\n    <Container>\n      {protocols.map((protocol) => (\n        <Title Key={protocol.SerialKey}>{protocol.Nombre}</Title>\n      ))}\n    </Container>\n  );\n};\n\nexport default Protocol;\n"]},"metadata":{},"sourceType":"module"}