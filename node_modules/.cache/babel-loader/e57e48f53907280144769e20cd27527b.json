{"ast":null,"code":"import { LOCATION_CHANGE } from './actions';\nexport const createRouterReducer = _ref => {\n  let {\n    savePreviousLocations = 0\n  } = _ref;\n  const initialState = {\n    location: null,\n    action: null\n  }; // eslint-disable-next-line no-restricted-globals\n\n  const numLocationToTrack = isNaN(savePreviousLocations) ? 0 : savePreviousLocations;\n  if (numLocationToTrack) initialState.previousLocations = [];\n  return function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let {\n      type,\n      payload\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (type === LOCATION_CHANGE) {\n      const {\n        location,\n        action\n      } = payload || {};\n      const previousLocations = numLocationToTrack // @ts-ignore\n      ? [{\n        location,\n        action\n      }, ...state.previousLocations.slice(0, numLocationToTrack)] : undefined;\n      return Object.assign(Object.assign({}, state), {\n        location,\n        action,\n        previousLocations\n      });\n    }\n\n    return state;\n  };\n};","map":{"version":3,"mappings":"AAEA,SAASA,eAAT,QAAgC,WAAhC;AAQA,OAAO,MAAMC,mBAAmB,GAAG,QAAwD;AAAA,MAAvD;AAAEC,yBAAqB,GAAG;AAA1B,GAAuD;AACxF,QAAMC,YAAY,GAAgB;AAC/BC,YAAQ,EAAE,IADqB;AAE/BC,UAAM,EAAE;AAFuB,GAAlC,CADwF,CAMxF;;AACA,QAAMC,kBAAkB,GAAGC,KAAK,CAACL,qBAAD,CAAL,GAA+B,CAA/B,GAAmCA,qBAA9D;AACA,MAAII,kBAAJ,EAAwBH,YAAY,CAACK,iBAAb,GAAiC,EAAjC;AAExB,SAAO,YAA8D;AAAA,QAA7DC,KAA6D,uEAArDN,YAAqD;AAAA,QAAvC;AAAEO,UAAF;AAAQC;AAAR,KAAuC,uEAAnB,EAAmB;;AAClE,QAAID,IAAI,KAAKV,eAAb,EAA8B;AAC3B,YAAM;AAAEI,gBAAF;AAAYC;AAAZ,UAAuBM,OAAO,IAAI,EAAxC;AACA,YAAMH,iBAAiB,GAAGF,kBAAkB,CAAC;AAAD,QACvC,CAAC;AAAEF,gBAAF;AAAYC;AAAZ,OAAD,EAAuB,GAAGI,KAAK,CAACD,iBAAN,CAAwBI,KAAxB,CAA8B,CAA9B,EAAiCN,kBAAjC,CAA1B,CADuC,GAEvCO,SAFL;AAGA,6CAAYJ,KAAZ,GAAiB;AAAEL,gBAAF;AAAYC,cAAZ;AAAoBG;AAApB,OAAjB;AACF;;AACD,WAAOC,KAAP;AACF,GATD;AAUF,CApBM","names":["LOCATION_CHANGE","createRouterReducer","savePreviousLocations","initialState","location","action","numLocationToTrack","isNaN","previousLocations","state","type","payload","slice","undefined"],"sources":["/home/gonza/src/meraki-bo/node_modules/redux-first-history/src/reducer.ts"],"sourcesContent":["import { Action, Location } from 'history';\nimport { AnyAction, Reducer } from 'redux';\nimport { LOCATION_CHANGE } from './actions';\n\nexport type RouterState = {\n   location?: Location | null;\n   action?: Action | null;\n   previousLocations?: { location?: Location | null; action?: Action | null }[];\n};\n\nexport const createRouterReducer = ({ savePreviousLocations = 0 }): Reducer<RouterState> => {\n   const initialState: RouterState = {\n      location: null,\n      action: null,\n   };\n\n   // eslint-disable-next-line no-restricted-globals\n   const numLocationToTrack = isNaN(savePreviousLocations) ? 0 : savePreviousLocations;\n   if (numLocationToTrack) initialState.previousLocations = [];\n\n   return (state = initialState, { type, payload } = {} as AnyAction) => {\n      if (type === LOCATION_CHANGE) {\n         const { location, action } = payload || {};\n         const previousLocations = numLocationToTrack // @ts-ignore\n            ? [{ location, action }, ...state.previousLocations.slice(0, numLocationToTrack)]\n            : undefined;\n         return { ...state, location, action, previousLocations };\n      }\n      return state;\n   };\n};\n"]},"metadata":{},"sourceType":"module"}