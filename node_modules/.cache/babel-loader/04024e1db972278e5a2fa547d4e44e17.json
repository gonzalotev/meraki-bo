{"ast":null,"code":"export const reachify = reduxHistory => {\n  let transitioning = false; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n  let resolveTransition = () => {};\n\n  return {\n    // eslint-disable-next-line no-underscore-dangle\n    _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n\n    listen(listener) {\n      if (reduxHistory.listenObject) {\n        // @ts-ignore\n        return reduxHistory.listen(listener);\n      } // @ts-ignore\n\n\n      return reduxHistory.listen((location, action) => listener({\n        location,\n        action\n      }));\n    },\n\n    // @ts-ignore\n    navigate(to) {\n      let {\n        state,\n        replace = false\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (transitioning || replace) {\n        reduxHistory.replace(to, state);\n      } else {\n        reduxHistory.push(to, state);\n      }\n\n      transitioning = true; // eslint-disable-next-line no-return-assign\n      // @ts-ignore\n\n      return new Promise(res => resolveTransition = res);\n    },\n\n    // @ts-ignore\n    get location() {\n      return reduxHistory.location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    }\n\n  };\n};","map":{"version":3,"mappings":"AAIA,OAAO,MAAMA,QAAQ,GAAIC,YAAD,IAAoE;AACzF,MAAIC,aAAa,GAAG,KAApB,CADyF,CAEzF;;AACA,MAAIC,iBAAiB,GAAG,MAAK,CAAG,CAAhC;;AAEA,SAAO;AACJ;AACAC,yBAAqB;AAClBF,mBAAa,GAAG,KAAhB;AACAC,uBAAiB;AACnB,KALG;;AAMJE,UAAM,CAACC,QAAD,EAAS;AACZ,UAAIL,YAAY,CAACM,YAAjB,EAA+B;AAC5B;AACA,eAAON,YAAY,CAACI,MAAb,CAAoBC,QAApB,CAAP;AACF,OAJW,CAKZ;;;AACA,aAAOL,YAAY,CAACI,MAAb,CAAoB,CAACG,QAAD,EAAWC,MAAX,KAAsBH,QAAQ,CAAC;AAAEE,gBAAF;AAAYC;AAAZ,OAAD,CAAlD,CAAP;AACF,KAbG;;AAcJ;AACAC,YAAQ,CAACC,EAAD,EAAoC;AAAA,UAA/B;AAAEC,aAAF;AAASC,eAAO,GAAG;AAAnB,OAA+B,uEAAF,EAAE;;AACzC,UAAIX,aAAa,IAAIW,OAArB,EAA8B;AAC3BZ,oBAAY,CAACY,OAAb,CAAqBF,EAArB,EAAyBC,KAAzB;AACF,OAFD,MAEO;AACJX,oBAAY,CAACa,IAAb,CAAkBH,EAAlB,EAAsBC,KAAtB;AACF;;AACDV,mBAAa,GAAG,IAAhB,CANyC,CAOzC;AACA;;AACA,aAAO,IAAIa,OAAJ,CAAYC,GAAG,IAAKb,iBAAiB,GAAGa,GAAxC,CAAP;AACF,KAzBG;;AA0BJ;AACA,QAAIR,QAAJ,GAAY;AACT,aAAOP,YAAY,CAACO,QAApB;AACF,KA7BG;;AA8BJ,QAAIN,aAAJ,GAAiB;AACd,aAAOA,aAAP;AACF;;AAhCG,GAAP;AAkCF,CAvCM","names":["reachify","reduxHistory","transitioning","resolveTransition","_onTransitionComplete","listen","listener","listenObject","location","action","navigate","to","state","replace","push","Promise","res"],"sources":["/home/gonza/src/meraki-bo/node_modules/redux-first-history/src/reachify.ts"],"sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport { History } from 'history';\nimport { ReachHistory } from './reachify.types';\n\nexport const reachify = (reduxHistory: History & { listenObject: boolean }): ReachHistory => {\n   let transitioning = false;\n   // eslint-disable-next-line @typescript-eslint/no-empty-function\n   let resolveTransition = () => {};\n\n   return {\n      // eslint-disable-next-line no-underscore-dangle\n      _onTransitionComplete() {\n         transitioning = false;\n         resolveTransition();\n      },\n      listen(listener) {\n         if (reduxHistory.listenObject) {\n            // @ts-ignore\n            return reduxHistory.listen(listener);\n         }\n         // @ts-ignore\n         return reduxHistory.listen((location, action) => listener({ location, action }));\n      },\n      // @ts-ignore\n      navigate(to, { state, replace = false } = {}) {\n         if (transitioning || replace) {\n            reduxHistory.replace(to, state);\n         } else {\n            reduxHistory.push(to, state);\n         }\n         transitioning = true;\n         // eslint-disable-next-line no-return-assign\n         // @ts-ignore\n         return new Promise(res => (resolveTransition = res));\n      },\n      // @ts-ignore\n      get location() {\n         return reduxHistory.location;\n      },\n      get transitioning() {\n         return transitioning;\n      },\n   };\n};\n"]},"metadata":{},"sourceType":"module"}