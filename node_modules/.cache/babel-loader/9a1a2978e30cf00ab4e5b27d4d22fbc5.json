{"ast":null,"code":"import { CALL_HISTORY_METHOD } from './actions';\nexport const createRouterMiddleware = _ref => {\n  let {\n    history,\n    showHistoryAction\n  } = _ref;\n  return () => next => action => {\n    if (action.type !== CALL_HISTORY_METHOD) {\n      return next(action);\n    }\n\n    const method = action.payload.method; // @ts-ignore\n\n    const args = action.payload.args; // eslint-disable-next-line default-case\n\n    switch (method) {\n      case 'push':\n        history.push(...args);\n        break;\n\n      case 'replace':\n        history.replace(...args);\n        break;\n\n      case 'go':\n        history.go(...args);\n        break;\n\n      case 'back':\n      case 'goBack':\n        // @ts-ignore\n        history.goBack && history.goBack(...args); //@ts-ignore //support history 5.x\n\n        history.back && history.back(...args);\n        break;\n\n      case 'forward':\n      case 'goForward':\n        // @ts-ignore\n        history.goForward && history.goForward(...args); //@ts-ignore //support history 5.x\n\n        history.forward && history.forward(...args);\n        break;\n    }\n\n    if (showHistoryAction) return next(action);\n  };\n};","map":{"version":3,"mappings":"AAGA,SAASA,mBAAT,QAAoD,WAApD;AAOA,OAAO,MAAMC,sBAAsB,GAChC;AAAA,MAAC;AAAEC,WAAF;AAAWC;AAAX,GAAD;AAAA,SACA,MACCC,IAAD,IACCC,MAAD,IAAwB;AACrB,QAAIA,MAAM,CAACC,IAAP,KAAgBN,mBAApB,EAAyC;AACtC,aAAOI,IAAI,CAACC,MAAD,CAAX;AACF;;AACD,UAAME,MAAM,GAAGF,MAAM,CAACG,OAAP,CAAeD,MAA9B,CAJqB,CAKrB;;AACA,UAAME,IAAI,GAAGJ,MAAM,CAACG,OAAP,CAAeC,IAA5B,CANqB,CAQrB;;AACA,YAAQF,MAAR;AACG,WAAK,MAAL;AACGL,eAAO,CAACQ,IAAR,CAAa,GAAID,IAAjB;AACA;;AACH,WAAK,SAAL;AACGP,eAAO,CAACS,OAAR,CAAgB,GAAIF,IAApB;AACA;;AACH,WAAK,IAAL;AACGP,eAAO,CAACU,EAAR,CAAW,GAAIH,IAAf;AACA;;AACH,WAAK,MAAL;AACA,WAAK,QAAL;AACG;AACAP,eAAO,CAACW,MAAR,IAAkBX,OAAO,CAACW,MAAR,CAAe,GAAIJ,IAAnB,CAAlB,CAFH,CAGG;;AACAP,eAAO,CAACY,IAAR,IAAgBZ,OAAO,CAACY,IAAR,CAAa,GAAIL,IAAjB,CAAhB;AACA;;AACH,WAAK,SAAL;AACA,WAAK,WAAL;AACG;AACAP,eAAO,CAACa,SAAR,IAAqBb,OAAO,CAACa,SAAR,CAAkB,GAAIN,IAAtB,CAArB,CAFH,CAGG;;AACAP,eAAO,CAACc,OAAR,IAAmBd,OAAO,CAACc,OAAR,CAAgB,GAAIP,IAApB,CAAnB;AACA;AAvBN;;AAyBA,QAAIN,iBAAJ,EAAuB,OAAOC,IAAI,CAACC,MAAD,CAAX;AACzB,GAtCD;AAAA,CADI","names":["CALL_HISTORY_METHOD","createRouterMiddleware","history","showHistoryAction","next","action","type","method","payload","args","push","replace","go","goBack","back","goForward","forward"],"sources":["/home/gonza/src/meraki-bo/node_modules/redux-first-history/src/middleware.ts"],"sourcesContent":["/* eslint-disable consistent-return,indent */\nimport { History } from 'history';\nimport { AnyAction as ReduxAction, Dispatch, Middleware } from 'redux';\nimport { CALL_HISTORY_METHOD, HistoryMethods } from './actions';\n\ntype CreateRouterMiddlewareArgs = {\n   history: History;\n   showHistoryAction: boolean;\n};\n\nexport const createRouterMiddleware =\n   ({ history, showHistoryAction }: CreateRouterMiddlewareArgs): Middleware =>\n   () =>\n   (next: Dispatch) =>\n   (action: ReduxAction) => {\n      if (action.type !== CALL_HISTORY_METHOD) {\n         return next(action);\n      }\n      const method = action.payload.method as HistoryMethods;\n      // @ts-ignore\n      const args = action.payload.args as Parameters<History[HistoryMethods]>;\n\n      // eslint-disable-next-line default-case\n      switch (method) {\n         case 'push':\n            history.push(...(args as Parameters<History['push']>));\n            break;\n         case 'replace':\n            history.replace(...(args as Parameters<History['replace']>));\n            break;\n         case 'go':\n            history.go(...(args as Parameters<History['go']>));\n            break;\n         case 'back':\n         case 'goBack':\n            // @ts-ignore\n            history.goBack && history.goBack(...(args as Parameters<History['goBack']>));\n            //@ts-ignore //support history 5.x\n            history.back && history.back(...(args as Parameters<History['back']>));\n            break;\n         case 'forward':\n         case 'goForward':\n            // @ts-ignore\n            history.goForward && history.goForward(...(args as Parameters<History['goForward']>));\n            //@ts-ignore //support history 5.x\n            history.forward && history.forward(...(args as Parameters<History['forward']>));\n            break;\n      }\n      if (showHistoryAction) return next(action);\n   };\n"]},"metadata":{},"sourceType":"module"}