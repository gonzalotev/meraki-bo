{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { createReduxHistoryContext } from 'redux-first-history';\nimport { createBrowserHistory } from 'history';\nimport { reducers, rootSaga } from './state';\nconst saga = createSagaMiddleware();\nconst {\n  routerReducer,\n  createReduxHistory,\n  routerMiddleware\n} = createReduxHistoryContext({\n  history: createBrowserHistory()\n});\nexport const store = configureStore({\n  reducer: {\n    router: routerReducer,\n    ...reducers\n  },\n  middleware: [saga, routerMiddleware]\n});\nexport const history = createReduxHistory(store);\nsaga.run(rootSaga);","map":{"version":3,"sources":["/home/gonza/src/meraki-bo/src/store/index.js"],"names":["configureStore","createSagaMiddleware","createReduxHistoryContext","createBrowserHistory","reducers","rootSaga","saga","routerReducer","createReduxHistory","routerMiddleware","history","store","reducer","router","middleware","run"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,SAAnC;AAEA,MAAMC,IAAI,GAAGL,oBAAoB,EAAjC;AAEA,MAAM;AACJM,EAAAA,aADI;AACWC,EAAAA,kBADX;AAC+BC,EAAAA;AAD/B,IAEFP,yBAAyB,CAAC;AAAEQ,EAAAA,OAAO,EAAEP,oBAAoB;AAA/B,CAAD,CAF7B;AAIA,OAAO,MAAMQ,KAAK,GAAGX,cAAc,CAAC;AAClCY,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAEN,aADD;AAEP,OAAGH;AAFI,GADyB;AAKlCU,EAAAA,UAAU,EAAE,CAACR,IAAD,EAAOG,gBAAP;AALsB,CAAD,CAA5B;AAQP,OAAO,MAAMC,OAAO,GAAGF,kBAAkB,CAACG,KAAD,CAAlC;AAEPL,IAAI,CAACS,GAAL,CAASV,QAAT","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { createReduxHistoryContext } from 'redux-first-history';\nimport { createBrowserHistory } from 'history';\n\nimport { reducers, rootSaga } from './state';\n\nconst saga = createSagaMiddleware();\n\nconst {\n  routerReducer, createReduxHistory, routerMiddleware,\n} = createReduxHistoryContext({ history: createBrowserHistory() });\n\nexport const store = configureStore({\n  reducer: {\n    router: routerReducer,\n    ...reducers,\n  },\n  middleware: [saga, routerMiddleware],\n});\n\nexport const history = createReduxHistory(store);\n\nsaga.run(rootSaga);\n"]},"metadata":{},"sourceType":"module"}